I've identified the issue in your SQL script. The error "column "primaryUserId" does not exist" is occurring because you're using inconsistent column naming in your family_members table.

Looking at the actual database structure, the family_members table has a column named primary_user_id (with underscores), but your RLS policies are trying to reference a column called primaryUserId (in camelCase).

Here's how to fix your SQL script:

Fixed Family Members RLS Policies



-- 2. FAMILY_MEMBERS TABLE POLICIES
-- Drop any existing policies first
DROP POLICY IF EXISTS "Service role bypass family_members" ON public.family_members;
DROP POLICY IF EXISTS "Users view own family" ON public.family_members;
DROP POLICY IF EXISTS "Admins view all family" ON public.family_members;

-- Create comprehensive policies for family_members
CREATE POLICY "Service role bypass family_members" ON public.family_members
  FOR ALL
  USING (auth.role() = 'service_role');

CREATE POLICY "Users view own family" ON public.family_members
  FOR SELECT
  USING (
    "primary_user_id"::uuid = (SELECT auth.uid())
    OR (SELECT auth.uid()) IN (
      SELECT id FROM auth.users
      WHERE auth.users.raw_user_meta_data->>'role' IN ('admin', 'agent')
      OR auth.users.email LIKE '%@mypremierplans.com'
    )
  );

CREATE POLICY "Users manage own family" ON public.family_members
  FOR ALL
  USING (
    "primary_user_id"::uuid = (SELECT auth.uid())
    OR (SELECT auth.uid()) IN (
      SELECT id FROM auth.users
      WHERE auth.users.raw_user_meta_data->>'role' = 'admin'
      OR auth.users.email LIKE '%@mypremierplans.com'
    )
  );

Issue Found: Column Name Mismatch
The error "column "primaryUserId" does not exist" is occurring because of inconsistent naming conventions in your SQL script. After examining your database schema, I found that you're using two different naming styles:

In your database tables, columns use snake_case (e.g., primary_user_id)
In your RLS policies, you're referring to camelCase names (e.g., primaryUserId)
Solution
To fix this issue, ensure your column references match the actual column names in the database. Specifically for the family_members table:

Change "primaryUserId"::uuid to "primary_user_id"::uuid in all the family_members table policies
I've provided the corrected SQL for the family_members policies above. You should apply similar naming convention corrections to any other tables in your script where column names might be mismatched.

Additional Column Names to Check
Based on your table schemas, here are other columns you might need to fix in your policies:

In commissions table:

Use agent_id instead of agentId
Use user_id instead of userId
Use subscription_id instead of subscriptionId
In payments table:

Use user_id instead of userId
Use subscription_id instead of subscriptionId
Recommended Practice
For consistency in your database:

Choose one naming convention (either snake_case or camelCase)
Apply it consistently across all tables and references
When updating existing schemas, ensure your code references match the actual column names
This should resolve the specific error you're encountering. If you need the full corrected SQL script for all tables, let me know.