Here is a functional sample of the Hosted Checkout POST version that already includes your test credential, PublicKey: eyAidGVybWluYWxQcm9maWxlSWQiOiAiYjE1NjFjODAtZTgxZC00NTNmLTlkMDUtYTI2NGRjOTZiODhkIiB9

<script src="https://hosted.epxuap.com/post.js"></script>
<script>
function epxSuccessCallback(msg) {
alert('Success: ' + msg);
}
function epxFailureCallback(msg) {
alert('Failure: ' + msg);
}
</script>
<form id="EpxCheckoutForm" name="EpxCheckoutForm">

<div>
<label for="PAN">Card Number:</label>
<input type="text" id="PAN" name="PAN" value="">
</div>

<div>
<label for="Expire">Expire:</label>
<input type="text" id="Expire" name="Expire" value="0826">
</div>

<div>
<label for="CVV">CVV:</label>
<input type="text" id="CVV" name="CVV" value="">
</div>

<div>
<label for="Amount">Amount:</label>
<input type="amount" id="Amount" name="Amount" value="1.00">
</div>

<div>
<label for="Order Number">Order Number:</label>
<input type="text" id="Order Number" name="OrderNumber" value="1234">
</div>

<div>
<label for="Invoice Number">Invoice Number:</label>
<input type="text" id="Invoice Number" name="InvoiceNumber" value="ABCD">
</div>

<div>
<label for="Email">Email:</label>
<input type="email" id="Email" name="Email" value="john@aol.com">
</div>

<div>
<label for="Billing Name">Billing Name:</label>
<input type="text" id="Billing Name" name="BillingName" value="John Doe">
</div>

<div>
<label for="Billing Street Address">Billing Street Address:</label>
<input type="text" id="Billing Street Address" name="BillingStreetAddress" value="100 Mountain Road">
</div>

<div>
<label for="Billing City">Billing City:</label>
<input type="text" id="Billing City" name="BillingCity" value="Denver">
</div>

<div>
<label for="Billing State">Billing State:</label>
<input type="state" id="Billing State" name="BillingState" value="CO">
</div>

<div>
<label for="Billing Postal Code">Billing Postal Code:</label>
<input type="zip" id="Billing Postal Code" name="BillingPostalCode" value="80206">
</div>

<div>
<input type="hidden" name="FailureCallback" value="epxFailureCallback">
<input type="hidden" name="SuccessCallback" value="epxSuccessCallback">
<input type="hidden" name="PublicKey" value="eyAidGVybWluYWxQcm9maWxlSWQiOiAiYjE1NjFjODAtZTgxZC00NTNmLTlkMDUtYTI2NGRjOTZiODhkIiB9">
<input type="hidden" name="Captcha" value="bypass">
</div>

<div>
<button onclick='Epx.sendPost()' type="button">Send Payment</button>
</div>
</form>

<style>
@keyframes spin {
0% {
transform: rotate(0deg);
}

100% {
transform: rotate(360deg);
}
}
</style>
Please note that Hosted Checkout uses Google reCaptcha v3 as one of it's security mechanisms, which will need to be implemented by your solution before moving into production. While testing in a sandbox you can use the ''bypass' value as the reCaptcha result.
If you begin implementing the reCaptcha, our sitekey is 6LflwiQgAAAAAC8yO38mzv-g9a9QiR91Bw4y62ww  and we will require a domain to whitelist.
Post.js relies solely on the "Name" attributes within <input> tags. All other attributes are free to be changed or deleted.
If you end up having issues with post.js / global callback then we can also allow you to interface the Hosted Checkout API directly, as long as requests originate from a client browser. (Let us know.)
You can find a demo here

Here is a sample of the Hosted Checkout button version:
<script src="https://hosted.epxuap.com/button.js" ></script>
<button class="epx-button" data-terminal-profile-id="b1561c80-e81d-453f-9d05-a264dc96b88d" data-checkout-id="1">Pay Now</button